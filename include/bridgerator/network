#include<iostream>
#include<sys/epoll.h>
#include<netinet/in.h>

class listener {
private:
	int                _socket;
	struct sockaddr_in _addr;

	std::string        _proxy_address;
	unsigned short     _proxy_port;
public:
	listener(unsigned short port, std::string proxy_address, unsigned short proxy_port);
	int start();
	int do_accept(struct sockaddr_in *client);
};

class forwarder;

class client {
private:
	int _socket;
	forwarder *_forwarder;
public:
	client(int socket);
	bool read_and_forward();
	forwarder *forwarder();
};

class forwarder {
private:
	int _socket;
public:
	forwarder(int socket);
	int socket();

};

