#include<iostream>
#include<sys/epoll.h>
#include<netinet/in.h>

class listener {
private:
	int                _socket;
	struct sockaddr_in _addr;

	std::string        _remote_address;
	unsigned short     _remote_port;
public:
	listener(unsigned short local_port, std::string remote_address,
	  unsigned short remote_port);
	int start();
	int do_accept(struct sockaddr_in *client);

	std::string remote_address();
	unsigned short remote_port();
};

class forwarder;

class client {
private:
	int _socket;
	int _forwarder_socket;
public:
	client(int socket, int forwarder_socket);
	bool read_and_forward();
};

class forwarder {
private:
	int _socket;
	int _client_socket;
public:
	forwarder(int socket, int client_socket);
	bool read_and_deliver();
};

void init_listeners();
void epoll_loop();
